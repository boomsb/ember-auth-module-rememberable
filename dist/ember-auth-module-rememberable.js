// Generated by EmberScript 0.0.7
var get$ = Ember.get;
Em.onLoad('Ember.Application', function (application) {
  application.initializer({
    name: 'ember-auth.module.rememberable',
    before: 'ember-auth-load',
    initialize: function (container, app) {
      app.register('authModule:rememberable', get$(get$(Em, 'Auth'), 'RememberableAuthModule'), { singleton: true });
      return app.inject('authModule:rememberable', 'auth', 'auth:main');
    }
  });
  return application.initializer({
    name: 'ember-auth.module.rememberable-load',
    after: 'ember-auth-load',
    initialize: function (container, app) {
      return container.lookup('authModule:rememberable');
    }
  });
});// Generated by EmberScript 0.0.7
var get$ = Ember.get;
var set$ = Ember.set;
set$(get$(Em, 'Auth'), 'RememberableAuthModule', Ember.Object.extend({
  init: function () {
    null != get$(this, 'config') || set$(this, 'config', get$(get$(this, 'auth'), 'rememberable'));
    this.patch();
    get$(this, 'auth').addHandler('signInSuccess', get$(this, 'remember').bind(this));
    get$(this, 'auth').addHandler('signInError', get$(this, 'forget').bind(this));
    return get$(this, 'auth').addHandler('signOutSuccess', get$(this, 'forget').bind(this));
  },
  recall: function (opts) {
    var token;
    if (null == opts)
      opts = {};
    if (!get$(get$(this, 'auth'), 'signedIn') && (token = this.retrieveToken())) {
      opts.data || (opts.data = {});
      get$(opts, 'data')[get$(get$(this, 'config'), 'tokenKey')] = token;
      if (null != get$(get$(this, 'config'), 'endPoint')) {
        return get$(this, 'auth').signIn(get$(get$(this, 'config'), 'endPoint'), opts);
      } else {
        return get$(this, 'auth').signIn(opts);
      }
    } else {
      return new (get$(get$(Em, 'RSVP'), 'resolve'));
    }
  },
  remember: function (data) {
    var token;
    this.forget();
    if (token = data[get$(get$(this, 'config'), 'tokenKey')])
      if (!(token === this.retrieveToken())) {
        return this.storeToken(token);
      }
  },
  forget: function () {
    return this.removeToken();
  },
  retrieveToken: function () {
    return get$(get$(this, 'auth'), '_session').retrieve('ember-auth-rememberable');
  },
  storeToken: function (token) {
    return get$(get$(this, 'auth'), '_session').store('ember-auth-rememberable', token, { expires: get$(get$(this, 'config'), 'period') });
  },
  removeToken: function () {
    return get$(get$(this, 'auth'), '_session').remove('ember-auth-rememberable');
  },
  patch: function () {
    var self;
    self = this;
    return get$(Em, 'Route').reopen({
      beforeModel: function () {
        var ret;
        ret = this._super.apply(this, arguments);
        if (!(get$(get$(self, 'config'), 'autoRecall') && !get$(get$(self, 'auth'), 'signedIn')))
          return ret;
        if (typeof get$(ret, 'then') === 'function') {
          return ret.then(function () {
            return self.recall();
          });
        } else {
          return self.recall();
        }
      }
    });
  }
}));// Generated by EmberScript 0.0.7
var get$ = Ember.get;
get$(Em, 'Auth').reopen({
  rememberable: {
    tokenKey: null,
    period: 14,
    autoRecall: true,
    endPoint: null
  }
});